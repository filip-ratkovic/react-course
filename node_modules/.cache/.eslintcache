[{"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\index.js":"1","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\App.jsx":"2","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\TasbeehCounter\\Tasbeeh.jsx":"3","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\Nav.jsx":"4","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Components\\QuoteApp.jsx":"5","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AllQuotes\\AllQuotes.jsx":"6","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\QuotesDetails\\QuotesDetails.jsx":"7","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\AllProjects.jsx":"8","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Login\\Login.jsx":"9","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\SignUp\\SignUp.jsx":"10","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Registration\\Registration.jsx":"11","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AddQuote\\AddQuote.jsx":"12","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Edit\\EditQuote.jsx":"13"},{"size":281,"mtime":1685728137513,"results":"14","hashOfConfig":"15"},{"size":564,"mtime":1686081161951,"results":"16","hashOfConfig":"15"},{"size":999,"mtime":1684173993092,"results":"17","hashOfConfig":"15"},{"size":278,"mtime":1685728406956,"results":"18","hashOfConfig":"15"},{"size":1055,"mtime":1686778004488,"results":"19","hashOfConfig":"15"},{"size":1124,"mtime":1686776809379,"results":"20","hashOfConfig":"15"},{"size":2377,"mtime":1686908328062,"results":"21","hashOfConfig":"15"},{"size":265,"mtime":1685987008642,"results":"22","hashOfConfig":"15"},{"size":2564,"mtime":1686764783778,"results":"23","hashOfConfig":"15"},{"size":3829,"mtime":1686595185316,"results":"24","hashOfConfig":"15"},{"size":320,"mtime":1686592235868,"results":"25","hashOfConfig":"15"},{"size":4813,"mtime":1686778662011,"results":"26","hashOfConfig":"15"},{"size":5265,"mtime":1686780551439,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"m47lc5",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\index.js",[],[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\App.jsx",["72","73","74","75"],[],"import React from \"react\";\r\nimport Tasbeeh from \"./Projects/TasbeehCounter/Tasbeeh\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport QuoteApp from \"./Projects/QuoteApp/Components/QuoteApp\";\r\nimport AllProjects from \"./AllProjects\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n  <QuoteApp/>      \r\n      {/* <Routes>\r\n        <Route path={\"/\"} element={<AllProjects />} />\r\n        <Route path={\"/quote\"} element={<QuoteApp/>} />\r\n        <Route path={\"/tasbeeh\"} element={<Tasbeeh/>} />\r\n      </Routes> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\TasbeehCounter\\Tasbeeh.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\Nav.jsx",[],[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Components\\QuoteApp.jsx",["76"],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AllQuotes\\AllQuotes.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\QuotesDetails\\QuotesDetails.jsx",["77"],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\AllProjects.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Login\\Login.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\SignUp\\SignUp.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Registration\\Registration.jsx",["78"],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AddQuote\\AddQuote.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Edit\\EditQuote.jsx",["79"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst editQuoteSchema = yup.object({\r\n  quoteText: yup.string().required().min(6).max(100),\r\n  quoteAuthor: yup.string().required().min(4).max(100),\r\n  quoteSource: yup.string().required().min(4).max(200),\r\n  category: yup.string().required(),\r\n});\r\n\r\nconst EditQuote = () => {\r\n  const [quoteData, setQuoteData] = useState({  quoteText: \"\",\r\n          quoteAuthor: \"\",\r\n          quoteSource: \"\",\r\n          category: \"\",});\r\nconst [categories, setCategories] = useState([])\r\n\r\n  const params = useParams();\r\n\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"authToken\");\r\n\r\n  useEffect(() => {\r\n    fetch(`https://js-course-server.onrender.com/quotes/get-quote/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setQuoteData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://js-course-server.onrender.com/category/get-all\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCategories(data);\r\n      });\r\n  }, []);\r\n\r\n\r\n  console.log(quoteData)\r\n\r\n  const editQuote = (values) => {\r\n    fetch(\"https://js-course-server.onrender.com/quotes/edit/\" + params.id, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          alert(data.message);\r\n        } else {\r\n          alert(\"Uspesno\");\r\n          navigate(\"/quote\");\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  if (!token) {\r\n    return <Navigate to={\"/login\"} replace={true} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-quote-wrapper\">\r\n      <button\r\n        className=\"\"\r\n        onClick={() => {\r\n          navigate(\"/quote\");\r\n        }}\r\n      >\r\n        Back\r\n      </button>\r\n      <Formik\r\n      enableReinitialize={true}\r\n        initialValues={quoteData}\r\n        validationSchema={editQuoteSchema}\r\n        onSubmit={(values, actions) => {\r\n          editQuote(values);\r\n          // actions.resetForm();\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        }) => (\r\n          <div>\r\n            <div className=\"add-quote-card\">\r\n              <p>Author</p>\r\n              <input\r\n                type=\"text\"\r\n                name=\"quoteAuthor\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.quoteAuthor}\r\n                className={`${errors.quoteAuthor ? \"input-error\" : \"\"}`}\r\n              />\r\n              <p className=\"error-message\">\r\n                {errors.quoteAuthor &&\r\n                  touched.quoteAuthor &&\r\n                  errors.quoteAuthor}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"add-quote-card\">\r\n              <p>Text</p>\r\n\r\n              <textarea\r\n                name=\"quoteText\"\r\n                id=\"\"\r\n                cols=\"25\"\r\n                rows=\"5\"\r\n                className={`${errors.quoteText ? \"input-error\" : \"\"}`}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.quoteText}\r\n              ></textarea>\r\n              <p className=\"error-message\">\r\n                {errors.quoteText && touched.quoteText && errors.quoteText}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"add-quote-card\">\r\n              <p>Source</p>\r\n              <input\r\n                type=\"text\"\r\n                name=\"quoteSource\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.quoteSource}\r\n                className={`${errors.quoteSource ? \"input-error\" : \"\"}`}\r\n              />\r\n              <p className=\"error-message\">\r\n                {errors.quoteSource &&\r\n                  touched.quoteSource &&\r\n                  errors.quoteSource}\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n                <p>Category</p>\r\n                <select\r\n                  name=\"category\"\r\n                  onChange={handleChange}\r\n                  value={values.category}\r\n                >\r\n                  <option value={\"\"} disabled={true}>\r\n                    -- Izaberi kategoriju --\r\n                  </option>\r\n                  {categories.map((item, index) => (\r\n                    <option key={index} value={item._id}>\r\n                      {item.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <p className=\"error-message\">\r\n                  {errors.category && touched.category && errors.category}\r\n                </p>\r\n              </div>\r\n\r\n            <button onClick={handleSubmit} type=\"button\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditQuote;\r\n",[],{"ruleId":"80","severity":1,"message":"81","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":16},{"ruleId":"80","severity":1,"message":"85","line":3,"column":18,"nodeType":"82","messageId":"83","endLine":3,"endColumn":23},{"ruleId":"80","severity":1,"message":"86","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":19},{"ruleId":"80","severity":1,"message":"87","line":2,"column":18,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":17,"column":6,"nodeType":"90","endLine":17,"endColumn":8,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"92","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"93","line":31,"column":6,"nodeType":"90","endLine":31,"endColumn":8,"suggestions":"94"},"no-unused-vars","'Tasbeeh' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'AllProjects' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'Login' is defined but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["96"],{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [id]",{"range":"101","text":"102"},"Update the dependencies array to be: [params.id]",{"range":"103","text":"104"},[671,673],"[id]",[996,998],"[params.id]"]