[{"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\index.js":"1","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\App.jsx":"2","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\TasbeehCounter\\Tasbeeh.jsx":"3","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\Nav.jsx":"4","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Components\\QuoteApp.jsx":"5","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AllQuotes\\AllQuotes.jsx":"6","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\QuotesDetails\\QuotesDetails.jsx":"7","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\AllProjects.jsx":"8","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Login\\Login.jsx":"9","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\SignUp\\SignUp.jsx":"10","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Registration\\Registration.jsx":"11","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AddQuote\\AddQuote.jsx":"12","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Edit\\EditQuote.jsx":"13","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Loading\\Loading.jsx":"14"},{"size":281,"mtime":1685728137513,"results":"15","hashOfConfig":"16"},{"size":564,"mtime":1686081161951,"results":"17","hashOfConfig":"16"},{"size":999,"mtime":1684173993092,"results":"18","hashOfConfig":"16"},{"size":278,"mtime":1685728406956,"results":"19","hashOfConfig":"16"},{"size":1055,"mtime":1686778004488,"results":"20","hashOfConfig":"16"},{"size":1302,"mtime":1686938765283,"results":"21","hashOfConfig":"16"},{"size":2343,"mtime":1686938182391,"results":"22","hashOfConfig":"16"},{"size":265,"mtime":1685987008642,"results":"23","hashOfConfig":"16"},{"size":2657,"mtime":1686938969600,"results":"24","hashOfConfig":"16"},{"size":3831,"mtime":1686937129576,"results":"25","hashOfConfig":"16"},{"size":295,"mtime":1686910353541,"results":"26","hashOfConfig":"16"},{"size":4813,"mtime":1686778662011,"results":"27","hashOfConfig":"16"},{"size":5278,"mtime":1686908585245,"results":"28","hashOfConfig":"16"},{"size":216,"mtime":1686935918256,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"m47lc5",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\index.js",[],[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\App.jsx",["79","80","81","82"],[],"import React from \"react\";\r\nimport Tasbeeh from \"./Projects/TasbeehCounter/Tasbeeh\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport QuoteApp from \"./Projects/QuoteApp/Components/QuoteApp\";\r\nimport AllProjects from \"./AllProjects\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n  <QuoteApp/>      \r\n      {/* <Routes>\r\n        <Route path={\"/\"} element={<AllProjects />} />\r\n        <Route path={\"/quote\"} element={<QuoteApp/>} />\r\n        <Route path={\"/tasbeeh\"} element={<Tasbeeh/>} />\r\n      </Routes> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\TasbeehCounter\\Tasbeeh.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\Nav.jsx",[],[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Components\\QuoteApp.jsx",["83"],[],"import React from \"react\";\r\nimport { Routes, Router, Route } from \"react-router-dom\";\r\nimport AllQuotes from \"../Pages/AllQuotes/AllQuotes\";\r\nimport QuotesDetails from \"../Pages/QuotesDetails/QuotesDetails\";\r\nimport \"./quoteApp.css\";\r\nimport Login from \"../Pages/Login/Login\";\r\nimport SignUp from \"../Pages/SignUp/SignUp\";\r\nimport Registration from \"../Pages/Registration/Registration\";\r\nimport AddQuote from \"../Pages/AddQuote/AddQuote\";\r\nimport EditQuote from \"../Pages/Edit/EditQuote\";\r\n\r\nfunction QuoteApp() {\r\n  return (\r\n    <div className=\"quote-main\">\r\n      <Routes>\r\n      <Route path={\"/\"} element={<Registration/>} />\r\n      <Route path={\"/add\"} element={<AddQuote/>} />\r\n        <Route path={\"/quote\"} element={<AllQuotes />} />\r\n        <Route path={\"/quote/:id\"} element={<QuotesDetails />} />\r\n        <Route path={\"/login\"} element={<Login/>} />\r\n        <Route path={\"/signup\"} element={<SignUp/>} />\r\n        <Route path={\"/quote/:id/edit\"} element={<EditQuote/>} />\r\n\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoteApp;\r\n","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AllQuotes\\AllQuotes.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\QuotesDetails\\QuotesDetails.jsx",["84"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport \"./quotesDetails.css\"\r\nconst URL = \"https://js-course-server.onrender.com/quotes/get-quote/\";\r\nfunction QuotesDetails() {\r\n  const [singleQuote, setSingleQuote] = useState([]);\r\n  const [liked, setLiked] = useState(false);\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const navigate = useNavigate()\r\n  const token = localStorage.getItem('authToken');\r\n  useEffect(() => {\r\n    fetch(URL + id)\r\n      .then((data) => data.json())\r\n      .then((res) => setSingleQuote(res))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleLike = () => {\r\n    setLiked(true);\r\n\r\n    fetch(`https://js-course-server.onrender.com/quotes/like/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => setSingleQuote(res))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n\r\n\r\n    fetch(`https://js-course-server.onrender.com/quotes/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => setSingleQuote(res))\r\n      .catch((err) => console.log(err));\r\n      navigate(\"/quote\");\r\n\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Link to={\"/quote\"}>Back to all quotes</Link>\r\n      <div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={singleQuote.quoteAuthor}\r\n        onChange={event => setSingleQuote({...singleQuote, quoteAuthor : event.target.value})}\r\n      />\r\n        <h3>{singleQuote.quoteSource}</h3>\r\n        <p>{singleQuote.quoteText}</p>\r\n        <p>{singleQuote.likes}</p>\r\n        <div\r\n          className={`heart ${liked ? \"liked\" : \"\"}`}\r\n          onClick={()=> {\r\n              // TODO  DISLIKE\r\n              liked ? console.log('DISLIKE') : handleLike()\r\n          }}\r\n        >\r\n        </div>\r\n\r\n       <Link to={`/quote/${id}/edit`}> <button\r\n        >\r\n          edit quote\r\n        </button></Link>\r\n\r\n        <button onClick={handleDelete}>delete</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuotesDetails;\r\n","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\AllProjects.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Login\\Login.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\SignUp\\SignUp.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Registration\\Registration.jsx",["85","86"],[],"import React from 'react'\r\nimport Login from '../Login/Login'\r\nimport { Link } from 'react-router-dom'\r\nimport SignUp from '../SignUp/SignUp'\r\n\r\nfunction Registration() {\r\n  return (\r\n    <div>\r\n        <SignUp>\r\n          \r\n        </SignUp>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Registration","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AddQuote\\AddQuote.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Edit\\EditQuote.jsx",["87"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst editQuoteSchema = yup.object({\r\n  quoteText: yup.string().required().min(6).max(100),\r\n  quoteAuthor: yup.string().required().min(4).max(100),\r\n  quoteSource: yup.string().required().min(4).max(200),\r\n  category: yup.string().required(),\r\n});\r\n\r\nconst EditQuote = () => {\r\n  const [quoteData, setQuoteData] = useState({  quoteText: \"\",\r\n          quoteAuthor: \"\",\r\n          quoteSource: \"\",\r\n          category: \"\",});\r\nconst [categories, setCategories] = useState([])\r\n\r\n  const params = useParams();\r\n\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"authToken\");\r\n\r\n  useEffect(() => {\r\n    fetch(`https://js-course-server.onrender.com/quotes/get-quote/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setQuoteData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://js-course-server.onrender.com/category/get-all\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCategories(data);\r\n      });\r\n  }, []);\r\n\r\n\r\n  console.log(quoteData)\r\n\r\n  const editQuote = (values) => {\r\n    fetch(\"https://js-course-server.onrender.com/quotes/edit/\" + params.id, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          alert(data.message);\r\n        } else {\r\n          alert(\"Uspesno\");\r\n          navigate(\"/quote\");\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  if (!token) {\r\n    return <Navigate to={\"/login\"} replace={true} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-quote-wrapper\">\r\n      <button\r\n        className=\"\"\r\n        onClick={() => {\r\n          navigate(`/quote/${params.id}`);\r\n        }}\r\n      >\r\n        Back\r\n      </button>\r\n      <Formik\r\n      enableReinitialize={true}\r\n        initialValues={quoteData}\r\n        validationSchema={editQuoteSchema}\r\n        onSubmit={(values, actions) => {\r\n          editQuote(values);\r\n          // actions.resetForm();\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        }) => (\r\n          <div>\r\n            <div className=\"add-quote-card\">\r\n              <p>Author</p>\r\n              <input\r\n                type=\"text\"\r\n                name=\"quoteAuthor\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.quoteAuthor}\r\n                className={`${errors.quoteAuthor ? \"input-error\" : \"\"}`}\r\n              />\r\n              <p className=\"error-message\">\r\n                {errors.quoteAuthor &&\r\n                  touched.quoteAuthor &&\r\n                  errors.quoteAuthor}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"add-quote-card\">\r\n              <p>Text</p>\r\n\r\n              <textarea\r\n                name=\"quoteText\"\r\n                id=\"\"\r\n                cols=\"25\"\r\n                rows=\"5\"\r\n                className={`${errors.quoteText ? \"input-error\" : \"\"}`}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.quoteText}\r\n              ></textarea>\r\n              <p className=\"error-message\">\r\n                {errors.quoteText && touched.quoteText && errors.quoteText}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"add-quote-card\">\r\n              <p>Source</p>\r\n              <input\r\n                type=\"text\"\r\n                name=\"quoteSource\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.quoteSource}\r\n                className={`${errors.quoteSource ? \"input-error\" : \"\"}`}\r\n              />\r\n              <p className=\"error-message\">\r\n                {errors.quoteSource &&\r\n                  touched.quoteSource &&\r\n                  errors.quoteSource}\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n                <p>Category</p>\r\n                <select\r\n                  name=\"category\"\r\n                  onChange={handleChange}\r\n                  value={values.category}\r\n                >\r\n                  <option value={\"\"} disabled={true}>\r\n                    -- Izaberi kategoriju --\r\n                  </option>\r\n                  {categories.map((item, index) => (\r\n                    <option key={index} value={item._id}>\r\n                      {item.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <p className=\"error-message\">\r\n                  {errors.category && touched.category && errors.category}\r\n                </p>\r\n              </div>\r\n\r\n            <button onClick={handleSubmit} type=\"button\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditQuote;\r\n","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Loading\\Loading.jsx",[],[],{"ruleId":"88","severity":1,"message":"89","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":15},{"ruleId":"88","severity":1,"message":"92","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":16},{"ruleId":"88","severity":1,"message":"93","line":3,"column":18,"nodeType":"90","messageId":"91","endLine":3,"endColumn":23},{"ruleId":"88","severity":1,"message":"94","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":19},{"ruleId":"88","severity":1,"message":"95","line":2,"column":18,"nodeType":"90","messageId":"91","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":17,"column":6,"nodeType":"98","endLine":17,"endColumn":8,"suggestions":"99"},{"ruleId":"88","severity":1,"message":"100","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"101","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":31,"column":6,"nodeType":"98","endLine":31,"endColumn":8,"suggestions":"103"},"no-unused-vars","'Tasbeeh' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'AllProjects' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'Login' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["105"],{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [id]",{"range":"110","text":"111"},"Update the dependencies array to be: [params.id]",{"range":"112","text":"113"},[660,662],"[id]",[996,998],"[params.id]"]