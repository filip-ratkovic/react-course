[{"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\index.js":"1","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\App.jsx":"2","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\TasbeehCounter\\Tasbeeh.jsx":"3","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\Nav.jsx":"4","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Components\\QuoteApp.jsx":"5","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AllQuotes\\AllQuotes.jsx":"6","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\QuotesDetails\\QuotesDetails.jsx":"7","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\AllProjects.jsx":"8","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Login\\Login.jsx":"9","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Registration\\SignUp.jsx":"10"},{"size":281,"mtime":1685728137513,"results":"11","hashOfConfig":"12"},{"size":564,"mtime":1686081161951,"results":"13","hashOfConfig":"12"},{"size":999,"mtime":1684173993092,"results":"14","hashOfConfig":"12"},{"size":278,"mtime":1685728406956,"results":"15","hashOfConfig":"12"},{"size":714,"mtime":1686257172516,"results":"16","hashOfConfig":"12"},{"size":1505,"mtime":1686049988657,"results":"17","hashOfConfig":"12"},{"size":2081,"mtime":1686082811091,"results":"18","hashOfConfig":"12"},{"size":265,"mtime":1685987008642,"results":"19","hashOfConfig":"12"},{"size":2473,"mtime":1686257558091,"results":"20","hashOfConfig":"12"},{"size":3879,"mtime":1686261703572,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"m47lc5",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\index.js",[],[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\App.jsx",["57","58","59","60"],[],"import React from \"react\";\r\nimport Tasbeeh from \"./Projects/TasbeehCounter/Tasbeeh\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport QuoteApp from \"./Projects/QuoteApp/Components/QuoteApp\";\r\nimport AllProjects from \"./AllProjects\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n  <QuoteApp/>      \r\n      {/* <Routes>\r\n        <Route path={\"/\"} element={<AllProjects />} />\r\n        <Route path={\"/quote\"} element={<QuoteApp/>} />\r\n        <Route path={\"/tasbeeh\"} element={<Tasbeeh/>} />\r\n      </Routes> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\TasbeehCounter\\Tasbeeh.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\Nav.jsx",[],[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Components\\QuoteApp.jsx",["61"],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\AllQuotes\\AllQuotes.jsx",["62","63","64","65"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst URL = \"https://js-course-server.onrender.com/quotes/get-all-quotes\";\r\n\r\nfunction AllQuotes() {\r\n  const [quotesData, setQuotesData] = useState([]);\r\n  const [like, setLike] = useState();\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(URL)\r\n      .then((data) => data.json())\r\n      .then((res) => setQuotesData(res))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  console.log(quotesData);\r\n\r\n  // const handleLike = () => {\r\n\r\n  //   fetch(`https://js-course-server.onrender.com/quotes/like/${quotesData._id}`, {\r\n  //     method: 'PATCH',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     },\r\n  //     // body: JSON.stringify({likes: quotesData.likes + 1})\r\n  //   })\r\n  //   .then((data) => data.json())\r\n  //   .then((res) => setQuotesData(res))\r\n  //   .catch((err) => console.log(err))\r\n  // }\r\n\r\n  return (\r\n    <div className=\"quote-main\">\r\n      {quotesData.map((quote) => {\r\n        return (\r\n          <div key={quote._id} className=\"quote-card\">\r\n            <h1>{quote.quoteAuthor}</h1>\r\n            <h3>{quote.quoteSource}</h3>\r\n            <p>{quote.quoteText}</p>\r\n            <div className=\"likes\">\r\n              <p>{quote.likes}</p>\r\n            </div>\r\n            <Link to={`/quote/${quote._id}`}>More details</Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllQuotes;\r\n","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\QuotesDetails\\QuotesDetails.jsx",["66","67"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport \"../../Components/quoteApp.css\";\r\nconst URL = \"https://js-course-server.onrender.com/quotes/get-quote/\";\r\nfunction QuotesDetails() {\r\n  const [singleQuote, setSingleQuote] = useState([]);\r\n  const [liked, setLiked] = useState(false);\r\n  const params = useParams();\r\n  const id = params.id;\r\n\r\n  useEffect(() => {\r\n    fetch(URL + id)\r\n      .then((data) => data.json())\r\n      .then((res) => setSingleQuote(res))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  const handleLike = () => {\r\n    setLiked(true);\r\n\r\n    fetch(`https://js-course-server.onrender.com/quotes/like/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => setSingleQuote(res))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n   const handleEdit = () => {\r\n      const updatedData = {\r\n        quoteAuthor: singleQuote.quoteAuthor\r\n      }\r\n    fetch(`https://js-course-server.onrender.com/quotes/edit/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => setSingleQuote(res))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div>\r\n      <Link to={\"/\"}>Back to all quotes</Link>\r\n      <div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={singleQuote.quoteAuthor}\r\n        onChange={event => setSingleQuote({...singleQuote, quoteAuthor : event.target.value})}\r\n      />\r\n        <h3>{singleQuote.quoteSource}</h3>\r\n        <p>{singleQuote.quoteText}</p>\r\n        <p>{singleQuote.likes}</p>\r\n        <button\r\n          className={`like-btn ${liked ? \"liked\" : \"\"}`}\r\n          onClick={handleLike}\r\n        >\r\n          33\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleEdit}\r\n        >\r\n          edit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuotesDetails;\r\n","C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\AllProjects.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Login\\Login.jsx",[],[],"C:\\Users\\DOKUMENTI\\Desktop\\programiranje\\react-kurs\\src\\Projects\\QuoteApp\\Pages\\Registration\\SignUp.jsx",[],[],{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":15},{"ruleId":"68","severity":1,"message":"72","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":16},{"ruleId":"68","severity":1,"message":"73","line":3,"column":18,"nodeType":"70","messageId":"71","endLine":3,"endColumn":23},{"ruleId":"68","severity":1,"message":"74","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":19},{"ruleId":"68","severity":1,"message":"75","line":2,"column":18,"nodeType":"70","messageId":"71","endLine":2,"endColumn":24},{"ruleId":"68","severity":1,"message":"76","line":8,"column":10,"nodeType":"70","messageId":"71","endLine":8,"endColumn":14},{"ruleId":"68","severity":1,"message":"77","line":8,"column":16,"nodeType":"70","messageId":"71","endLine":8,"endColumn":23},{"ruleId":"68","severity":1,"message":"78","line":9,"column":10,"nodeType":"70","messageId":"71","endLine":9,"endColumn":15},{"ruleId":"68","severity":1,"message":"79","line":9,"column":17,"nodeType":"70","messageId":"71","endLine":9,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":16,"column":6,"nodeType":"82","endLine":16,"endColumn":8,"suggestions":"83"},{"ruleId":"68","severity":1,"message":"84","line":32,"column":13,"nodeType":"70","messageId":"71","endLine":32,"endColumn":24},"no-unused-vars","'Tasbeeh' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'AllProjects' is defined but never used.","'Router' is defined but never used.","'like' is assigned a value but never used.","'setLike' is assigned a value but never used.","'liked' is assigned a value but never used.","'setLiked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'updatedData' is assigned a value but never used.",{"desc":"86","fix":"87"},"Update the dependencies array to be: [id]",{"range":"88","text":"89"},[574,576],"[id]"]