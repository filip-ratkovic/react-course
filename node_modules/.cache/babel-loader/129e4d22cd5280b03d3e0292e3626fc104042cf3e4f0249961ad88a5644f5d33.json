{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DOKUMENTI\\\\Desktop\\\\programiranje\\\\react-kurs\\\\src\\\\Projects\\\\QuoteApp\\\\Pages\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./Login.css\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(6).max(50).uppercase()\n});\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, actions) => {\n        fetch(\"https://js-course-server.onrender.com/user/login\", {\n          method: \"POST\",\n          body: JSON.stringify(values),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => res.json()).then(data => {\n          if (data.token) {\n            navigate(\"/\");\n          }\n        });\n      },\n      validationSchema: loginSchema\n      // validate={(values) => {\n      //   const errors = {};\n      //   if (\n      //     !values.error ||\n      //     values.error.length < 10 ||\n      //     values.error.length > 100\n      //   ) {\n      //     errors.email = \"Neispravan email\";\n      //   }\n      //   return errors;\n      // }}\n      ,\n      children: _ref => {\n        let {\n          values,\n          // formikov state\n          errors,\n          // errors = { email: 'Neispravan email' }\n          touched,\n          // touched = { email: true }\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log(values, \"values\");\n              console.log(errors, \"errors\");\n              console.log(touched, \"touched\");\n            },\n            children: \"Console log states\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.email && touched.email && errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.password && touched.password && errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            type: \"button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Formik","yup","useNavigate","jsxDEV","_jsxDEV","loginSchema","object","email","string","required","password","min","max","uppercase","Login","_s","navigate","className","children","initialValues","onSubmit","values","actions","fetch","method","body","JSON","stringify","headers","then","res","json","data","token","validationSchema","_ref","errors","touched","handleChange","handleBlur","handleSubmit","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","onBlur","value","_c","$RefreshReg$"],"sources":["C:/Users/DOKUMENTI/Desktop/programiranje/react-kurs/src/Projects/QuoteApp/Pages/Login/Login.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst loginSchema = yup.object({\r\n  email: yup.string().required().email(),\r\n  password: yup.string().required().min(6).max(50).uppercase(),\r\n});\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        onSubmit={(values, actions) => {\r\n          fetch(\"https://js-course-server.onrender.com/user/login\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              if (data.token) {\r\n                navigate(\"/\");\r\n              }\r\n            });\r\n        }}\r\n        validationSchema={loginSchema}\r\n        // validate={(values) => {\r\n        //   const errors = {};\r\n        //   if (\r\n        //     !values.error ||\r\n        //     values.error.length < 10 ||\r\n        //     values.error.length > 100\r\n        //   ) {\r\n        //     errors.email = \"Neispravan email\";\r\n        //   }\r\n        //   return errors;\r\n        // }}\r\n      >\r\n        {({\r\n          values, // formikov state\r\n          errors, // errors = { email: 'Neispravan email' }\r\n          touched, // touched = { email: true }\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        }) => (\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                console.log(values, \"values\");\r\n                console.log(errors, \"errors\");\r\n                console.log(touched, \"touched\");\r\n              }}\r\n            >\r\n              Console log states\r\n            </button>\r\n            <div>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.email}\r\n              />\r\n              <p className=\"error-message\">\r\n                {errors.email && touched.email && errors.email}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.password}\r\n              />\r\n              <p className=\"error-message\">\r\n                {errors.password && touched.password && errors.password}\r\n              </p>\r\n            </div>\r\n            <button onClick={handleSubmit} type=\"button\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}