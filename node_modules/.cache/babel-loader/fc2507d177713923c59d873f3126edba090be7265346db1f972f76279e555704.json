{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DOKUMENTI\\\\Desktop\\\\programiranje\\\\react-kurs\\\\src\\\\Projects\\\\QuoteTest\\\\AllQuoteTest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://js-course-server.onrender.com/quotes/get-all-quotes\";\nfunction AllQuoteTest() {\n  _s();\n  const [quote, setQuote] = useState([]);\n  useEffect(() => {\n    fetch(URL).then(data => data.json()).then(res => setQuote(res)).catch(err => console.log(err));\n  }, []);\n  console.log(quote);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: quote.map(citat => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(AllQuoteTest, \"P5MJjxmpgJIlWPNkfqf2lW6SBDs=\");\n_c = AllQuoteTest;\nexport default AllQuoteTest;\nvar _c;\n$RefreshReg$(_c, \"AllQuoteTest\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","URL","AllQuoteTest","_s","quote","setQuote","fetch","then","data","json","res","catch","err","console","log","children","map","citat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DOKUMENTI/Desktop/programiranje/react-kurs/src/Projects/QuoteTest/AllQuoteTest.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nconst URL = \"https://js-course-server.onrender.com/quotes/get-all-quotes\"\r\n\r\nfunction AllQuoteTest() {\r\nconst [quote,setQuote] = useState([]);\r\n\r\nuseEffect(()=> {\r\n    fetch(URL)\r\n    .then((data) => data.json())\r\n    .then((res) => setQuote(res))\r\n    .catch((err) => console.log(err))\r\n},[])\r\nconsole.log(quote)\r\n  return (\r\n    <div>\r\n        {quote.map((citat)=>{\r\n            return <div>\r\n\r\n                \r\n            </div>\r\n\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllQuoteTest"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClD,MAAMC,GAAG,GAAG,6DAA6D;AAEzE,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAErCD,SAAS,CAAC,MAAK;IACXS,KAAK,CAACL,GAAG,CAAC,CACTM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEG,GAAG,IAAKL,QAAQ,CAACK,GAAG,CAAC,CAAC,CAC5BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EACLC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAChB,oBACEJ,OAAA;IAAAe,QAAA,EACKX,KAAK,CAACY,GAAG,CAAEC,KAAK,IAAG;MAChB,oBAAOjB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGD;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEV;AAAClB,EAAA,CArBQD,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAuBrB,eAAeA,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}