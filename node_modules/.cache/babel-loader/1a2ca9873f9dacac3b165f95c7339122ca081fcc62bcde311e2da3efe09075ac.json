{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DOKUMENTI\\\\Desktop\\\\programiranje\\\\react-kurs\\\\src\\\\Projects\\\\QuoteApp\\\\Pages\\\\AllQuotes\\\\AllQuotes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://js-course-server.onrender.com/quotes/get-all-quotes\";\nfunction AllQuotes() {\n  _s();\n  const [quotesData, setQuotesData] = useState([]);\n  const [like, setLike] = useState();\n  const [liked, setLiked] = useState(false);\n  useEffect(() => {\n    fetch(URL).then(data => data.json()).then(res => setQuotesData(res)).catch(err => console.log(err));\n  }, []);\n  console.log(quotesData);\n  const handleLike = () => {\n    fetch('https://js-course-server.onrender.com/quotes/like/63dd1748a045500035752dc4', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        likes: quotesData.likes + 1\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-main\",\n    children: quotesData.map(quote => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: quote.quoteAuthor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quote.quoteSource\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: quote.quoteText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likes\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `like-btn ${liked ? 'liked' : ''}`,\n            onClick: handleLike,\n            children: \"33\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: quote.likes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/quote/${quote._id}`,\n          children: \"Open nesto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, quote._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(AllQuotes, \"bGQdEEaL7AYoIqEoy/jYsl4dOV8=\");\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","URL","AllQuotes","_s","quotesData","setQuotesData","like","setLike","liked","setLiked","fetch","then","data","json","res","catch","err","console","log","handleLike","method","headers","body","JSON","stringify","likes","className","children","map","quote","quoteAuthor","fileName","_jsxFileName","lineNumber","columnNumber","quoteSource","quoteText","onClick","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/DOKUMENTI/Desktop/programiranje/react-kurs/src/Projects/QuoteApp/Pages/AllQuotes/AllQuotes.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst URL = \"https://js-course-server.onrender.com/quotes/get-all-quotes\"\r\n\r\nfunction AllQuotes() {\r\nconst [quotesData, setQuotesData] = useState([]);\r\nconst [like, setLike] = useState();\r\nconst [liked, setLiked] = useState(false)\r\n\r\nuseEffect(()=> {\r\n    fetch(URL)\r\n    .then((data) => data.json())\r\n    .then((res) => setQuotesData(res))\r\n    .catch((err) => console.log(err))\r\n},[])\r\n\r\nconsole.log(quotesData)\r\n\r\nconst handleLike = () => {\r\n \r\n\r\n  fetch('https://js-course-server.onrender.com/quotes/like/63dd1748a045500035752dc4', {\r\n    method: 'POST', \r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({likes: quotesData.likes + 1})\r\n  })\r\n}\r\n\r\n  return (\r\n    <div className='quote-main'>\r\n        {quotesData.map((quote) => {\r\n            return <div key={quote._id} className='quote-card'>\r\n                <h1>{quote.quoteAuthor}</h1>\r\n                <h3>{quote.quoteSource}</h3>\r\n                <p>{quote.quoteText}</p>\r\n            <div className=\"likes\">\r\n            <button className={`like-btn ${liked ? 'liked' : ''}`}\r\n            onClick={handleLike}\r\n            >33</button>\r\n            <p>{quote.likes}</p>\r\n\r\n            </div>\r\n                <Link to={`/quote/${quote._id}`}>Open nesto</Link>\r\n\r\n                 </div>\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllQuotes"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}